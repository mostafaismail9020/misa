<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2017 SAP SE or an SAP affiliate company.  All rights reserved.

 This software is the confidential and proprietary information of SAP
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with SAP.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/file
		http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
		
    <context:annotation-config/> 

	<bean id="baseDirectorySagia" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/${tenantId}/investsaudi" />
	</bean>
	<!-- 1) Scan for files -->
	<file:inbound-channel-adapter id="batchFilesSagia" directory="#{baseDirectorySagia}"
		filename-regex="^(.*)-(\d+)\.csv" comparator="fileOrderComparator">
		<int:poller fixed-rate="1000" />
	</file:inbound-channel-adapter>

	<!-- 2) move the file to processing and setup header -->
	<file:outbound-gateway request-channel="batchFilesSagia" reply-channel="batchFilesSagiaProc"
		directory="#{baseDirectorySagia}/processing" delete-source-files="true" />
		
	<int:service-activator input-channel="batchFilesSagiaProc" output-channel="batchFilesHeaderInit"
		ref="sagiaHeaderSetupTask" method="execute" />
		
	<bean id="sagiaHeaderSetupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
		<property name="catalog" value="sagiaProductCatalog" />
		<property name="net" value="false" />
		<property name="storeBaseDirectory" ref="baseDirectorySagia" />
	</bean>

	<!-- dashboard data starting -->

	<bean id="batchDashboardConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="dashboard_dashboard"
		  p:converter-ref="batchDashboardConverter"/>
	<bean id="batchDashboardConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# Dashboard data
				insert_update Dashboard;uid[unique=true,allownull=true];index[allownull=true];value;valueLabel[lang = en];valueLabel[lang = ar];percentage;percentageLabel[lang = en];percentageLabel[lang = ar];calenderValue[lang = en];calenderValue[lang = ar];displayName[lang = en];displayName[lang = ar];notes[lang = en];notes[lang = ar]
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{14};{S}</value>
		</property>
	</bean>

	<bean id="batchCreditRatingConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="dashboard_creditRating"
		  p:converter-ref="batchCreditRatingConverter"/>
	<bean id="batchCreditRatingConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				#CreditRating data
				INSERT_UPDATE CreditRating			;spLabel[lang = en];spLabel[lang = ar]      ;moodysLabel[lang = en];moodysLabel[lang = ar]       ;fitchLabel[lang = en];fitchLabel[lang = ar] 	;spValue[lang = en];spValue[lang = ar] ;moodysValue[lang = en];moodysValue[lang = ar] ;fitchValue[lang = en];fitchValue[lang = ar] ;displayName	[lang = en];displayName	[lang = ar]	  ;name[unique=true] ;calenderValue[lang = en];calenderValue[lang = ar] ;currencyValue
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4};{5};{+6};{7};{8};{9};{10};{11};{12};{13};{14};{15};{16};{17};{S}</value>
		</property>
	</bean>
	<!-- dashboard data end -->

	<!-- sa international indices start -->
	<bean id="SAInternationalIndexConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="saInternationalIndices_saInternationalIndex"
		  p:converter-ref="SAInternationalIndexConverter"/>

	<bean id="SAInternationalIndexConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				#SaudiArabiaInternationalIndices
				INSERT_UPDATE SaudiArabiaInternationalIndices			;uid[unique=true,allownull=true];frequency;rankValue;scoreValue;year[unique=true]
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4};{S}</value>
		</property>
	</bean>
	<!-- sa international indices end -->
	
	<!-- Infralogistics data start -->

	<bean id="batchInfrastructureLogisticsConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="infraLogistics_infrastructureLogistics"
		  p:converter-ref="batchInfrastructureLogisticsConverter"/>
	<bean id="batchInfrastructureLogisticsConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# InfrastructureLogistics data
				insert_update InfrastructureLogistics;uid[unique=true,allownull=true];index[allownull=true];value1;label1[lang=en];label1[lang=ar];value2;label2[lang=en];label2[lang=ar];value3;label3[lang=en];label3[lang=ar];value4;label4[lang=en];label4[lang=ar];value5;label5[lang=en];label5[lang=ar];displayName[lang=en];displayName[lang=ar]
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{14};{15};{16};{17};{18};{19};{S}</value>
		</property>
	</bean>

	<bean id="infraLogisticsConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
		  p:mapping="infraLogistics_infraLogisticsLanding"
		  p:converter-ref="infraLogisticsConverter"/>
		  
	<bean id="infraLogisticsConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# InfraLogisticsLanding
				INSERT_UPDATE InfraLogisticsLanding			;internationalAirportslabel[unique=true]      ;internationalAirportsValue    ;domesticAirportsLabel[lang = en];domesticAirportsLabel[lang = ar]  	;domesticAirportsValue 		;containersLabel[lang = en];containersLabel[lang = ar]  		;containersValue ;containersAmount[lang = en];containersAmount[lang = ar]; portsCapacityLabel[lang = en];portsCapacityLabel[lang = ar];portsCapacityValue  ;portsCapacityAmount[lang = en];portsCapacityAmount[lang = ar];airportsLabel[lang = en];airportsLabel[lang = ar]  ;airportsValue    ;portsLabel [lang = en];portsLabel [lang = ar]  ;portsValue  ;displayAirportslabel[lang = en];;displayAirportslabel[lang = ar]
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{14};{15};{16};{17};{18};{19};{20};{21};{22};{S}</value>
		</property>
	</bean>
	
	<bean id="networkConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
		  p:mapping="infraLogistics_lengthOfNetwork"
		  p:converter-ref="networkConverter"/>
		  
	<bean id="networkConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# LengthOfNetwork
				INSERT_UPDATE LengthOfNetwork		;networkName[unique=true]		;networkValue
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{S}</value>
		</property>
	</bean>

	<bean id="privateConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
		  p:mapping="infraLogistics_privateCities"
		  p:converter-ref="privateConverter"/>
		  
	<bean id="privateConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# PrivateCities
					INSERT_UPDATE PrivateCities	;name[unique=true]	;establishmentYear 	  ;totalArea	;developedArea 		;noOfContracts 		  ;displayName[lang = en];displayName[lang = ar]
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{2};{3};{4};{5};{6};{7};{S}</value>
		</property>
	</bean>
	
	<!-- Infralogistics data end -->
	
	<!-- saudi economic sector data start -->

	<bean id="economicSectorsConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="saudiEconomicSectors_economicSectors"
		  p:converter-ref="economicSectorsConverter"/>

	<bean id="economicSectorsConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# EconomicSectors
				INSERT_UPDATE EconomicsSector;uid;index;value;label[allownull = true,lang = en];label[allownull = true,lang = ar];displayName[unique = true,lang = en];displayName[unique = true,lang = ar];year
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4};{5};{6};{7};{S}</value>
		</property>
	</bean>

	<bean id="popDistributionConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="saudiEconomicSectors_popDistribution"
		  p:converter-ref="popDistributionConverter"/>

	<bean id="popDistributionConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# PopulationDistribution
				INSERT_UPDATE PopulationDistribution;uid[unique = true];year[unique = true];saudi;nonSaudi;totalPopulation;saudiPercentage;nonSaudiPercentage
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4};{5};{6};{S}</value>
		</property>
	</bean>

	<bean id="genderDistrConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="saudiEconomicSectors_genderDistribution"
		  p:converter-ref="genderDistrConverter"/>

	<bean id="genderDistrConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# GenderDistribution
				INSERT_UPDATE GenderDistribution ;uid[unique=true];year[unique=true];total
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{S}</value>
		</property>
	</bean>

	<bean id="regionDistributionConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="saudiEconomicSectors_regionDistribution"
		  p:converter-ref="regionDistConverter"/>

	<bean id="regionDistConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# RegionDistribution
				INSERT_UPDATE RegionDistribution	;uid[unique=true];year[unique=true];riyadhValue;riyadhPercentage;makkahValue;makkahPercentage;almadinahValue;almadinaPercentage;alqassimValue;alqassimPercentage;easternValue;easternPercentage;asirValue;asirPercentage;tabukValue;tabukPercentage;hailValue;hailPercentage;northernValue;northernPercentage;jazanValue;jazanPercentage;najranValue;najranPercentage;albahaValue;albahaPercentage;aljawfValue;aljawfPercentage;totalPopulation
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{14};{15};{16};{17};{18};{19};{20};{21};{22};{23};{24};{25};{26};{27};{28};{S}</value>
		</property>
	</bean>

	<bean id="graduatesConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
		  p:mapping="saudiEconomicSectors_graduatesByDegree"
		  p:converter-ref="graduatesConverter"/>
		  
	<bean id="graduatesConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# GraduatesByDegree
					INSERT_UPDATE GraduatesByDegree		;year[unique=true]	;intermediate  		;diploma   ;bachelor   	 ;master    ;phd   ;fellowship
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{2};{3};{4};{5};{6};{S}</value>
		</property>
	</bean>
	<!-- saudi economic sector data end -->

	

	<!-- investment data start -->
	<bean id="aqValGrowthConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="investmentData_aqValueGrowth"
		  p:converter-ref="aqValGrowthConverter"/>

	<bean id="aqValGrowthConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				#AQValueGrowth
				INSERT_UPDATE AQValueGrowth ;uid[unique=true];year[unique=true];saudiInvestmentsAbroad;incomingForeignInvestment;totalNumberOfInvestmentLicenses;manufacturingLicenses;constructionLicenses;wholeSaleRetailTradeMoLicenses;informationAndCommunicationLicenses;professionalScientificAndTechnicalLicenses;accommodationFoodServiceActivityLicenses;administrativeSupportServiceActivityLicenses;transportationStorageLicenses;humanHealthSocialworkActivityLicenses;financialInsuranceActivityLicenses;otherServiceActivityLicenses;miningQuarryingLicenses;waterSupplySewerageWasteManagement;educationLicenses;realEstateActivityLicenses;artsEntertainmentRecreationLicenses;electricityGasSteamAircondition;agricultureForestryFishingLicenses;notAssignedLicenses;publicAdministrationDefenceCompuLicenses;activitiesOfExtraterritorialOrganizationLicenses;nonOilGdp
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{14};{15};{16};{17};{18};{19};{20};{21};{22};{23};{24};{25};{26};{27};{S}</value>
		</property>
	</bean>

	<bean id="foreignInvstConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="investmentData_foreignInvestment"
		  p:converter-ref="foreignInvstConverter"/>

	<bean id="foreignInvstConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				#ForeignInvestment
				INSERT_UPDATE ForeignInvestment ;uid;index[unique=true];value1;label1;value2;label2[lang=en];label2[lang=ar];value3[lang=en];value3[lang=ar];label3[lang=en];label3[lang=ar]
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{S}</value>
		</property>
	</bean>

	<bean id="commercialRegisterConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="investmentData_commercialRegister"
		  p:converter-ref="commercialRegstrConverter"/>

	<bean id="commercialRegstrConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# CommercialRegister
				INSERT_UPDATE CommercialRegister ;uid[unique=true];year[unique=true];value;percentage
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{S}</value>
		</property>
	</bean>

	<bean id="fundAsstConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="investmentData_fundAssets"
		  p:converter-ref="fundAsstConverter"/>

	<bean id="fundAsstConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				#FundAssets
				INSERT_UPDATE FundAssets ;uid[unique=true];year[unique=true];totalNoOfInvestmentFund;totalNoOfInvestmentFundGrowthRate;totalInvestmentFundAssets;totalInvestmentFundAssetsGrowthRate;foreignInvestmentFund;foreignInvestmentFundGrowthRate;domesticInvestmentFund;domesticInvestmentFundGrowthRate
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4};{5};{6};{7};{8};{9};{S}</value>
		</property>
	</bean>
	<!-- investment data end -->
	<!-- Opportunity Product and Media Start -->
	<bean id="sagiaStagedImpexMacros" class="java.lang.String">
		<constructor-arg>
			<value># ImpEx for importing data into $CATALOG$
			$productCatalog = sagiaProductCatalog
			$productCV = catalogVersion(catalog(id[default=$productCatalog]), version[default='Staged'])[unique=true, default=$productCatalog':Staged']
			$contentCatalog = sagiaContentCatalog
			$contentCV = catalogVersion(CatalogVersion.catalog(Catalog.id[default=$contentCatalog]), CatalogVersion.version[default=Staged])[unique = true, default=$contentCatalog:Staged]
			</value>
		</constructor-arg>
	</bean>
	<bean id="sagiaOnlineImpexMacros" class="java.lang.String">
		<constructor-arg>
			<value># ImpEx for importing data into $CATALOG$
				$productCatalog = sagiaProductCatalog
				$productCV = catalogVersion(catalog(id[default=$productCatalog]), version[default='Online'])[unique=true, default=$productCatalog':Online']
				$contentCatalog = sagiaContentCatalog
				$contentCV = catalogVersion(CatalogVersion.catalog(Catalog.id[default=$contentCatalog]), CatalogVersion.version[default=Online])[unique = true, default=$contentCatalog:Online]
			</value>
		</constructor-arg>
	</bean>
	<bean id="batchStagedOpportunityMediaConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="opportunity_media"
		  p:converter-ref="batchStagedOpportunityMediaConverter"/>

	<bean id="batchStagedOpportunityMediaConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{sagiaStagedImpexMacros}
				# Import media from filesystem
				$importFolder=file:$BASE_SOURCE_DIR$
				INSERT_UPDATE Media;code[unique=true];mime[default='image/jpeg'];$productCV;folder(qualifier)[default=images];realfilename;@media[translator=de.hybris.platform.impex.jalo.media.MediaDataTranslator]
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{+1};;;{+0};$importFolder/{+0}.{+2};{S}</value>
		</property>
	</bean>

	<bean id="batchOnlineOpportunityMediaConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="opportunity_media"
		  p:converter-ref="batchOnlineOpportunityMediaConverter"/>

	<bean id="batchOnlineOpportunityMediaConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{sagiaOnlineImpexMacros}
				# Import media from filesystem
				$importFolder=file:$BASE_SOURCE_DIR$/images
				INSERT_UPDATE Media;code[unique=true];mime[default='image/jpeg'];$productCV;folder(qualifier)[default=images];realfilename;@media[translator=de.hybris.platform.impex.jalo.media.MediaDataTranslator]
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{+1};;;{+0};$importFolder/{+0}.{+2};{S}</value>
		</property>
	</bean>


	<bean id="opportunityStagedProductConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="opportunity_product"
		  p:converter-ref="opportunityStagedProductConverter"/>

	<bean id="opportunityStagedProductConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{sagiaStagedImpexMacros}
				# Opportunity Product
				INSERT_UPDATE OpportunityProduct; code[unique = true]; name [lang = en]; name [lang = ar]; description[lang = en]; description[lang = ar]; highlights[lang = en][cellDecorator=com.sap.ibso.eservices.core.decorators.OpportunityProductCellDecorator]; highlights[lang = ar][cellDecorator=com.sap.ibso.eservices.core.decorators.OpportunityProductCellDecorator]; supercategories(code, $productCV); region(uid, $contentCV); detail (code, $productCV);featured[default=false]; approvalStatus(code)[default = 'approved']; $productCV
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4};{5};{6};{7};{8};{9};;;</value>
		</property>
	</bean>

	<bean id="opportunityOnlineProductConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="opportunity_product"
		  p:converter-ref="opportunityOnlineProductConverter"/>

	<bean id="opportunityOnlineProductConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{sagiaOnlineImpexMacros}
				# Opportunity Product
				INSERT_UPDATE OpportunityProduct; code[unique = true]; name [lang = en]; name [lang = ar]; description[lang = en]; description[lang = ar]; highlights[lang = en][cellDecorator=com.sap.ibso.eservices.core.decorators.OpportunityProductCellDecorator]; highlights[lang = ar][cellDecorator=com.sap.ibso.eservices.core.decorators.OpportunityProductCellDecorator]; supercategories(code, $productCV); region(uid, $contentCV); detail (code, $productCV);featured[default=false]; approvalStatus(code)[default = 'approved']; $productCV
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4};{5};{6};{7};{8};{9};;;</value>
		</property>
	</bean>

	<!-- Opportunity Product and Media End -->
</beans>
