
<Server port="${tomcat.internalserver.port}" shutdown="SHUTDOWN">

  <Listener className="de.hybris.tomcat.HybrisGlobalResourcesLifecycleListener" />
  <Listener className="org.apache.catalina.mbeans.JmxRemoteLifecycleListener" rmiRegistryPortPlatform="${tomcat.jmx.port}" rmiServerPortPlatform="${tomcat.jmx.server.port}" />


  <GlobalNamingResources>

		<!-- If you want to use the jndi database resource please set db.pool.fromJNDI property and uncomment following block.
			 Furthermore you have to copy the related jdbc library from platform/lib/dbdriver to the tomcat/lib folder -->
		<!-- <Resource 	name="hybrisDS"
 						auth="Container"
 						type="javax.sql.DataSource"
              		maxActive="${db.pool.maxActive}"
              		maxIdle="${db.pool.maxIdle}"
              		maxWait="${db.pool.maxWait}"
              		testWhileIdle="${db.pool.testWhileIdle}"
						timeBetweenEvictionRunsMillis="${db.pool.timeBetweenEvictionRunsMillis}"
						minEvictableIdleTimeMillis="${db.pool.minEvictableIdleTimeMillis}"
						numTestsPerEvictionRun="${db.pool.numTestsPerEvictionRun}"
						testOnBorrow="${db.pool.testOnBorrow}"
						testOnReturn="${db.pool.testOnReturn}"
						whenExhaustedAction="${db.pool.whenExhaustedAction}"
              		username="${db.username}"
             		password="${db.password.XMLENCODED}"
              		driverClassName="${db.driver}"
			url="${db.url.XMLENCODED}"
			useStatementFacade="${db.statement.facade}"/>
        -->

		<!-- If you want to use a mail JNDI resource please set mail.fromJNDI property and uncomment following block.
		     Furthermore you have to copy the mail library from ext/core/lib to tomcat/lib -->
		<!-- <Resource 	name="mail/Session" auth="Container"
		        		type="javax.mail.Session"
		        		mail.transport.protocol="smtp"
		        		mail.smtp.host="${mail.smtp.server}"
		        		mail.smtp.from="${mail.from}"
		        		description="Global E-Mail Resource"
		    		/>-->

  </GlobalNamingResources>


  <Service name="Catalina" >

	<Executor     name="hybrisExecutor"
			        namePrefix="hybrisHTTP"
			        maxThreads="${tomcat.maxthreads}"
			        minSpareThreads="${tomcat.minsparethreads}"
			        maxIdleTime="${tomcat.maxidletime}"/>

    <Connector port="${tomcat.http.port}"
			   maxHttpHeaderSize="8192"
			   maxPostSize="4194304"
               maxThreads="${tomcat.maxthreads}"
               protocol="org.apache.coyote.http11.Http11Protocol"
               executor="hybrisExecutor"
               enableLookups="false"
               acceptCount="100"
               connectionTimeout="20000"
               URIEncoding="UTF-8"
               disableUploadTimeout="true" />

    <Connector port="${tomcat.ssl.port}"
			   maxHttpHeaderSize="8192"
			   maxPostSize="4194304"
               maxThreads="150"
               protocol="org.apache.coyote.http11.Http11Protocol"
               executor="hybrisExecutor"
               enableLookups="false"
               acceptCount="${tomcat.acceptcount}"
               connectionTimeout="20000"
               disableUploadTimeout="true"
               URIEncoding="UTF-8"
               SSLEnabled="true"
					scheme="https"
					secure="true"
					clientAuth="false"
   				sslProtocol = "TLS"
   				keystoreFile="${tomcat.ssl.keystore.path}"
   				keystorePass="${tomcat.ssl.keystore.password}"
                />

    <!--
    This might evaluate into 
    <Connector protocol="AJP/1.3" port="${tomcat.ajp.port}" proxyPort="${proxy.http.port}" redirectPort="${proxy.ssl.port}" useIPVHosts="${tomcat.ajp.useipv}" />  
    where the tomcat.ajp.port is mandatory property to render this connector. 
     --> 
	${tomcat.connectors.ajp.plain}	

    <Engine name="Catalina" defaultHost="localhost">

		
		<Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster" channelSendOptions="8">
		
		   <Manager className="org.apache.catalina.ha.session.DeltaManager"
		          expireSessionsOnShutdown="false"
		          notifyListenersOnReplication="true"/>
		
		   <Channel className="org.apache.catalina.tribes.group.GroupChannel">
		      <Membership className="org.apache.catalina.tribes.membership.McastService"
		               address="228.0.0.4"
		               port="45564"
		               frequency="500"
		               dropTime="3000"/>
		      <Receiver className="org.apache.catalina.tribes.transport.nio.NioReceiver"
		              address="auto"
		              port="4000"
		              autoBind="100"
		              selectorTimeout="5000"
		              maxThreads="6"/>
		
		      <Sender className="org.apache.catalina.tribes.transport.ReplicationTransmitter">
		         <Transport className="org.apache.catalina.tribes.transport.nio.PooledParallelSender"/>
		      </Sender>
		      <Interceptor className="org.apache.catalina.tribes.group.interceptors.TcpFailureDetector"/>
		      <Interceptor className="org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor"/>
			</Channel>
			<Valve className="org.apache.catalina.ha.tcp.ReplicationValve" filter=""/>
			<Valve className="org.apache.catalina.ha.session.JvmRouteBinderValve"/>
		
		 	<ClusterListener className="org.apache.catalina.ha.session.ClusterSessionListener"/>
		</Cluster>
 		  
		<Valve 	className="org.apache.catalina.valves.AccessLogValve"
             		directory="${HYBRIS_LOG_DIR}/tomcat"
	      		 	prefix="access."
        	   		suffix=".log"
	      		 	pattern="combined"
          />

      <Host startStopThreads="0"  	name="localhost"
      			appBase="webapps"
		       	unpackWARs="false"
		       	autoDeploy="false">
		       	
		        <Valve className="org.apache.catalina.valves.ErrorReportValve" 
		               showReport="${tomcat.errorReport.showReport}" 
		               showServerInfo="${tomcat.errorReport.showServerInfo}"/>

			${tomcat.webapps}


      </Host>

    </Engine>

  </Service>

</Server>


